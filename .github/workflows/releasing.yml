name: Releasing

# Run this workflow every time a new commit is pushed to main
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  release:
    # This filter never seems to pass
    #if: github.event.base_ref == 'refs/heads/main'
    # Name the Job
    name: Release on GitHub
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Generate the HTML output using asciidoctor
      - name: Generate HTML
        uses: mgred/asciidoctor-action@master
        with:
            args: asciidoctor index.adoc

      # Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload the generated HTML as a release asset
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./index.html
          asset_name: index.html
          asset_content_type: text/html

      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout publication branch
        uses: actions/checkout@v2
        with:
          ref: 'gh-pages'

      # From: https://github.community/t/how-to-get-just-the-tag-name/16241/17
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - name: Commit the generated html
        run: |
          mkdir -p v
          mv index.html v/${{ steps.get_version.outputs.VERSION }}.html
          git add v/${{ steps.get_version.outputs.VERSION }}.html
          git commit -m "Publish ${{ steps.get_version.outputs.VERSION }}"
          git push
